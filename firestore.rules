rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // 사용자 인증 확인 함수
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // 사용자가 회사 관리자인지 확인
    function isCompanyAdmin(companyId) {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/companyMembers/$(companyId + '_' + request.auth.uid)) &&
        get(/databases/$(database)/documents/companyMembers/$(companyId + '_' + request.auth.uid)).data.role in ['admin', 'manager'];
    }
    
    // 사용자가 회사 멤버인지 확인
    function isCompanyMember(companyId) {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/companyMembers/$(companyId + '_' + request.auth.uid));
    }
    
    // 사용자가 본인인지 확인
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // 회사 컬렉션
    match /companies/{companyId} {
      allow read: if isCompanyMember(companyId);
      allow create: if isAuthenticated();
      allow update, delete: if isCompanyAdmin(companyId);
    }

    // 회사 멤버 컬렉션
    match /companyMembers/{memberId} {
      allow read: if isAuthenticated() && 
        (isOwner(resource.data.userId) || isCompanyAdmin(resource.data.companyId));
      allow create: if isAuthenticated();
      allow update, delete: if isCompanyAdmin(resource.data.companyId);
    }

    // 출퇴근 기록 컬렉션
    match /attendance/{attendanceId} {
      allow read: if isAuthenticated() && 
        (isOwner(resource.data.userId) || isCompanyAdmin(resource.data.companyId));
      allow create, update: if isAuthenticated() && isOwner(resource.data.userId);
      allow delete: if isCompanyAdmin(resource.data.companyId);
    }

    // 외근/연차 신청 컬렉션
    match /leaveRequests/{requestId} {
      allow read: if isAuthenticated() && 
        (isOwner(resource.data.userId) || isCompanyAdmin(resource.data.companyId));
      allow create, update: if isAuthenticated() && isOwner(resource.data.userId);
      allow update: if isCompanyAdmin(resource.data.companyId);
      allow delete: if isCompanyAdmin(resource.data.companyId);
    }

    // 회사 초대 컬렉션
    match /companyInvites/{inviteId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAuthenticated() && 
        isCompanyAdmin(resource.data.companyId);
    }

    // 사용자 컬렉션
    match /users/{userId} {
      allow read, write: if isOwner(userId);
    }

    // 사용자 프로필 컬렉션
    match /userProfiles/{profileId} {
      allow read, write: if isOwner(profileId);
    }

    // 사원증 컬렉션
    match /employeeCards/{cardId} {
      allow read, write: if isOwner(resource.data.uid);
    }

    // 기존 컬렉션들 (하위 호환성)
    match /employees/{employeeId} {
      allow read, write: if isAuthenticated() && 
        (isOwner(employeeId) || request.auth.token.role == 'admin');
    }

    match /passes/{passId} {
      allow read, write: if isAuthenticated();
    }

    match /requests/{requestId} {
      allow read, write: if isAuthenticated() && 
        (isOwner(resource.data.userId) || request.auth.token.role == 'admin');
    }

    match /departments/{departmentId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && request.auth.token.role == 'admin';
    }
  }
}
